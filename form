<DOCTYPE html>
<html>
<head>
	<title>form
		</title>
		<style>
			form{
				border:7px solid;
				border-color:black;
				border-radius:35px;
				opacity:0.8;
				text-align:justify-all;
				background-image:url("https://wallpapermemory.com/uploads/559/cool-wallpaper-4k-372010.jpg");
			}
			label,input{
				text-align:justify-all;
				margin:40px;
				padding:5px;
				border-radius:17px;
				border:2px solid;
				color:black;
				background-color:coral;
				opacity:0.7;
			}
			button{
				margin:40px;
				padding:16px;
				border-radius:10px;
				border:2px solid;
				color:black;
				background-color:coral;
				opacity:0.7;
				}
			body{
				background-image:url("https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcQct0fGlwUUob9fhLjIcc5EGs08q_5zcUI85onXn7U7k84Kvigl&usqp=CAU"); 
				background-repeat:no-repeat;
				background-size:cover;
			}
			h1{
				border:6px dashed lavenderblush;
				color:darkgreen;
				background-image:url(https://cache.desktopnexus.com/thumbseg/2425/2425664-bigthumbnail.jpg);
				background-size:cover;
				text-shadow:2px 4px black;
			}
			hr{
				border:3px dotted grey;
			}
			h1:hover{
				color:blue;
				background-color:red;
			}
			h1:focus{
				color:blue;
				background-color:red;
			}/*focus like hover for keyboard when comes on this will do the assigned action*/
			#box{
				display:flex;/*The dislpay is used to show on screen and the flex property is used for joining vertex-to-vertex*/
				flex-direction:row-reverse;/*row-reverse will reverse the direction of flex. Other values of dir are row-column,row,column.*/
				justify-content:center;/*The justify-content property is for aligning horizontally. The 'justify' is used for align and 'content' is used for the align value. Center will bring the content in center. Other values are:; flex-start(means left), flex-end(means right),space-between(means 1th will be at left last will be at right and remaining in between with equal space in between), space-evenly(means equal space all), space-around(means all around the items with half on ends)*/
				align-items:center;/*align-items property is to align flex items vertically.Center is for bringing content in center. Baseline is as the line that the letters sit on. Stretch the items to fill the flex container. Flex-end. Flex-start. */
				flex-wrap:wrap-reverse; /*Using the flex-wrap property tells CSS to wrap items this means extra items move into a new row or column.values=wrap, nowrap and wrap-reverse. */		
			}
			#box-1{
				background-color:blue;
				height:250px;
				float: right;
				width: 300px;
				flex-shrink:;/*The first is the flex-shrink property. When it's used, it allows an item to shrink if the flex container is too small. Items shrink when the width of the parent container is smaller than the combined widths of all the flex items within it. The values are numbers.have to use with all we want to apply*/
				flex-grow:;/* The flex-grow property controls the size of items when the parent container expands.valuesare numbers.have to use with all we want to apply*/
				flex-basis:2;/*The flex-basis property specifies the initial size of the item before CSS makes adjustments.values are in numbers with units px,%,em or auto.have to use with all we want to apply*/
				flex:grow shrink basis; /*this is the short code for a flex-grow,flex-shrink,flex-basis at once.have to use with all similar to this.*/
				order:1;/*The order property is used to tell CSS the order of how flex items appear in the flex container. By default, items will appear in the same order they come in the source HTML.values are in numbers. have to use with all similar to this.*/ 		
			}
			#box-2{
				height:250px;
				width:300px;
				background-color:yellow;
				position: absolute;
				margin-left:38%;
			}
			#box-3{
				height:250px;
				width:300px;
				background-color:green;
				position:relative;
				}
			input:in-range/*we can also use 'out-of-range' likewise in case you use the border color will become yellow above 10 and below 5.*/ 
			{
			border: 3px solid gold;
			}
			div.in-range{
				color:white;
			}
			.invalid:invalid /*we can also use 'valid' likewise in case you use the border color will become green when you will enter a valid email.*/
			{
				border:3px dotted green;
			}
			::selection/*this is to style when the user selects anything on the web page.*/ 
			{
			  color: deeppink;
			  background: cyan;
}
	</style>
	</head>
	<body>
		<center>
	<big><h1 tabindex="0">Form</h1></big><!--tabindex is for when work through keyboard pressing tab-->
	<br><div><hr><br>
	<form>
	<label>First name :</label>
	<input type="text" required><!-- auto field will be activated by autofocus as 'autofocus'and autocomplete can also be used as 'autocomplete="on or off" '--><br><br>
	<label>Last name :</label>
	<input type="text" required><br><br>
	<label>Mother's name :</label>
	<input type="text" required><br><br>
	<label>Father's name :</label>
	<input type="text" required><br><br>
	<label>Address:</label>
	<input type="text" required><br><br>
	<label>Mobile no. :</label>
	<input type="number" required maxlength="10"><br><br>
	<label>E-mail :</label>
	<input type="text" required><br>
	<br>
	<!--if u do not want to create link on button use 'formaction="location or path" ' attr and 'formnovalidate' attr is used with button tag-->
	<button type="submit" formnovalidate>Submit</button>
<!--'onclick="alert('warning:invalid details')" ' this will give a alert after clicking on button-->

	<!--fieldset is for grouping like <p> and legend is for headind like <h1> both are used in only radio buttons-->
	  <fieldset>
    <legend align="center">Choose one of these three items:</legend>
    <input id="one" type="radio" name="items" value="one">
    <label for="one">Choice One</label><br>
    <input id="two" type="radio" name="items" value="two">
    <label for="two">Choice Two</label><br>
    <input id="three" type="radio" name="items" value="three">
    <label for="three">Choice Three</label>
  </fieldset>
  <label>upload file:</label>
  <input type="file" multiple>
  <label for="range">select your range: </label>
<input type="range" id="range" name="range"><br>
  <label>choose colour: </label>
<input type="color" multiple><br>
<div class="in-range">
<h3>A demonstration of the :in-range selector.</h3>
<input type="number" min="5" max="10" value="7">
<p>Try typing a number out of range (less than 5 or higher than 10), to see the styling disappear.</p></div>
<div>
	<h3>A demonstration of the :invalid selector.</h3>
<input type="email" placeholder="E-mail" class="invalid">
<p>Try typing a legal e-mail address, to see the styling disappear.</p>
</div>
	</center>
	</form><div id="box">
	<div id="box-1"></div>
	<div id="box-2"></div>
	<div id="box-3"></div>
</div>
	</div>
	</body>
	</html>
